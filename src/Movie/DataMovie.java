package Movie;

import static java.lang.Double.parseDouble;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class DataMovie extends javax.swing.JFrame {
static Koneksi db;
    /**
     * Creates new form DataMovie
     */
    public DataMovie(Koneksi db) {
        initComponents();
        this.db = db;
        DefaultTableModel model = (DefaultTableModel)this.Table.getModel();
        
        Object[][] movie = new Object[100][5];
        try{
            db.statement = db.koneksi.createStatement();
            ResultSet result = db.statement.executeQuery("SELECT * FROM `movie`");
            
            int i = 0;
            while(result.next()){
                movie[i][0] = result.getString("judul");
                movie[i][1] = result.getString("alur");
                movie[i][2] = result.getString("penokohan");
                movie[i][3] = result.getString("akting");
                movie[i][4] = result.getString("nilai");
                i++;
            }
            db.statement.close();
        } catch(Exception err){
            System.out.println(err);
        }
        
        Object[] row = new Object[5];
        model.setRowCount(0);
        for (int i = 0; movie[i][0] != null; i++) {
            row[0] = movie[i][0];
            row[1] = movie[i][1];
            row[2] = movie[i][2];
            row[3] = movie[i][3];
            row[4] = movie[i][4];
            model.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TxtJudul = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TxtAlur = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtPenokohan = new javax.swing.JTextField();
        TxtAkting = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        BtnTambah = new javax.swing.JButton();
        BtnClear = new javax.swing.JButton();
        BtnDelete = new javax.swing.JButton();
        BtnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Judul");

        TxtJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtJudulActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Alur");

        TxtAlur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtAlurActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Penokohan");

        TxtPenokohan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPenokohanActionPerformed(evt);
            }
        });

        TxtAkting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtAktingActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Akting");

        BtnTambah.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnTambah.setText("Tambah");
        BtnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTambahActionPerformed(evt);
            }
        });

        BtnClear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnClear.setText("Clear");
        BtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClearActionPerformed(evt);
            }
        });

        BtnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnDelete.setText("Delete");
        BtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteActionPerformed(evt);
            }
        });

        BtnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnUpdate.setText("Update");
        BtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUpdateActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Judul", "Alur", "Penokohan", "Akting", "Nilai"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(TxtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TxtAlur, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TxtPenokohan, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtAkting, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtAlur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtPenokohan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtAkting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnTambah)
                        .addGap(4, 4, 4)
                        .addComponent(BtnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnClear)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtJudulActionPerformed

    private void TxtAlurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtAlurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtAlurActionPerformed

    private void TxtPenokohanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPenokohanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPenokohanActionPerformed

    private void TxtAktingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtAktingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtAktingActionPerformed

    private void BtnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTambahActionPerformed
        // TODO add your handling code here:
        
        try{
            String judul = TxtJudul.getText();
            double alur = parseDouble(TxtAlur.getText());
            double penokohan= parseDouble(TxtPenokohan.getText());
            double akting = parseDouble(TxtAkting.getText());
            
            if(alur > 5.0 || penokohan > 5.0 || akting > 5.0){
               JOptionPane.showMessageDialog(null,"Max = 5!!"); 
            } else if(alur < 0 || penokohan < 0 || akting < 0){
                JOptionPane.showMessageDialog(null,"Min = 0!!");
            } else{
                double nilai = (alur + penokohan + akting)/3.0;
                db.statement = db.koneksi.createStatement(); 
                String query = "INSERT INTO `movie` (`judul`, `alur`, `penokohan`, `akting`, `nilai`) VALUES ('"+ judul +"', '"+ alur +"', '"+penokohan+"', '"+akting+"', '"+nilai+"')";
                db.statement.execute(query);
            }
        DefaultTableModel model = (DefaultTableModel)this.Table.getModel();
        Object[][] movie = new Object[100][5];
        try{
            db.statement = db.koneksi.createStatement();
            ResultSet result = db.statement.executeQuery("SELECT * FROM `movie`");
            
            int i = 0;
            while(result.next()){
                movie[i][0] = result.getString("judul");
                movie[i][1] = result.getString("alur");
                movie[i][2] = result.getString("penokohan");
                movie[i][3] = result.getString("akting");
                movie[i][4] = result.getString("nilai");
                i++;
            }
            db.statement.close();
        } catch(Exception err){
            System.out.println(err);
        }
        
        Object[] row = new Object[5];
        model.setRowCount(0);
        for (int i = 0; movie[i][0] != null; i++) {
            row[0] = movie[i][0];
            row[1] = movie[i][1];
            row[2] = movie[i][2];
            row[3] = movie[i][3];
            row[4] = movie[i][4];
            model.addRow(row);
        }            
            
        }catch(Exception err){
            JOptionPane.showMessageDialog(null,"Lengkapi Isi Kolom!");
        }
    }//GEN-LAST:event_BtnTambahActionPerformed

    private void BtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUpdateActionPerformed
        // TODO add your handling code here:
        try{
            String judul = TxtJudul.getText();
            double alur = parseDouble(TxtAlur.getText());
            double penokohan= parseDouble(TxtPenokohan.getText());
            double akting = parseDouble(TxtAkting.getText());
            
        Object[][] movie = new Object[100][5];
        try{
            db.statement = db.koneksi.createStatement();
            ResultSet result = db.statement.executeQuery("SELECT * FROM `movie`");
            
            int i = 0;
            while(result.next()){
                movie[i][0] = result.getString("judul");
                movie[i][1] = result.getString("alur");
                movie[i][2] = result.getString("penokohan");
                movie[i][3] = result.getString("akting");
                movie[i][4] = result.getString("nilai");
                i++;
            }
            db.statement.close();
        } catch(Exception err){
            System.out.println(err);
        }
        boolean found = false;
        int index = -1;
        for (int i = 0; movie[i][0] != null; i++) {
            if(movie[i][0].toString().equals(judul)){
                index = i;
                found = true;
                break;
            }
        }
        if(found){
            if(alur > 5.0 || penokohan > 5.0 || akting > 5.0){
               JOptionPane.showMessageDialog(null," Max = 5"); 
            } else if(alur < 0 || penokohan < 0 || akting < 0){
                JOptionPane.showMessageDialog(null," Min = 0");
            } else{
                try{
                    double nilai = (alur+penokohan+akting)/3.0;
                    db.statement = db.koneksi.createStatement(); 
                    String query = "UPDATE `movie` SET `alur` = '"+alur+"', `penokohan` = '"+penokohan+"', `akting` = '"+ akting +"', `nilai` = '" + nilai + "' WHERE `movie`.`judul` = '" + judul + "'";
                    db.statement.execute(query);
                }catch(Exception err){
                    System.out.println(err);
                }
                JOptionPane.showMessageDialog(null,"Berhasil UPDATE");
            }
        }else{
           JOptionPane.showMessageDialog(null,"Tidak Ditemukan "); 
        }
            
        }catch(Exception err){
            JOptionPane.showMessageDialog(null,"Lengkapi isi semua kolom!!!");
        }
        
                Object[][] movie = new Object[100][5];
        try{
            db.statement = db.koneksi.createStatement();
            ResultSet result = db.statement.executeQuery("SELECT * FROM `movie`");
            
            int i = 0;
            while(result.next()){
                movie[i][0] = result.getString("judul");
                movie[i][1] = result.getString("alur");
                movie[i][2] = result.getString("penokohan");
                movie[i][3] = result.getString("akting");
                movie[i][4] = result.getString("nilai");
                i++;
            }
            db.statement.close();
        } catch(Exception err){
            System.out.println(err);
        }
        
        DefaultTableModel model = (DefaultTableModel)this.Table.getModel();
        Object[] row = new Object[5];
        model.setRowCount(0);
        
        for (int i = 0; movie[i][0] != null; i++) {
            row[0] = movie[i][0];
            row[1] = movie[i][1];
            row[2] = movie[i][2];
            row[3] = movie[i][3];
            row[4] = movie[i][4];
            model.addRow(row);
        }
        this.TxtJudul.setText("");
        this.TxtAlur.setText("");
        this.TxtPenokohan.setText("");
        this.TxtAkting.setText("");
    }//GEN-LAST:event_BtnUpdateActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)this.Table.getModel();
        Object title = model.getValueAt(this.Table.getSelectedRow(),0);
        Object story = model.getValueAt(this.Table.getSelectedRow(),1);
        Object actors = model.getValueAt(this.Table.getSelectedRow(),2);
        Object acting = model.getValueAt(this.Table.getSelectedRow(),3);

        this.TxtJudul.setText(title.toString());
        this.TxtAlur.setText(story.toString());
        this.TxtPenokohan.setText(actors.toString());
        this.TxtAkting.setText(acting.toString());
    }//GEN-LAST:event_TableMouseClicked

    private void BtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteActionPerformed
        // TODO add your handling code here:
        try{
            String judul = TxtJudul.getText();

            
    Object[][] movie = new Object[100][5];
        try{
            db.statement = db.koneksi.createStatement();
            ResultSet result = db.statement.executeQuery("SELECT * FROM `movie`");
            
            int i = 0;
            while(result.next()){
                movie[i][0] = result.getString("judul");
                movie[i][1] = result.getString("alur");
                movie[i][2] = result.getString("penokohan");
                movie[i][3] = result.getString("akting");
                movie[i][4] = result.getString("nilai");
                i++;
            }
            db.statement.close();
        } catch(Exception err){
            System.out.println(err);
        }
            
        boolean found = false;
        int index = -1;
        for (int i = 0; movie[i][0] != null; i++) {
            if(movie[i][0].toString().equals(judul)){
                index = i;
                found = true;
                break;
            }
        }
        if(found){
            try{
                db.statement = db.koneksi.createStatement(); 
                String query = "DELETE FROM `movie` WHERE `movie`.`judul` = \'"+judul+"\'";
                db.statement.execute(query);
            }catch(Exception err){
                System.out.println(err);
            }
            JOptionPane.showMessageDialog(null,"Berhasil Menghapus!!");
        }else{
           JOptionPane.showMessageDialog(null,"Tidak ditemukan!!"); 
        }            
            
        }catch(Exception err){
            JOptionPane.showMessageDialog(null,"Tidak ditemukan!!");
        }
        
    Object[][] movie = new Object[100][5];
        try{
            db.statement = db.koneksi.createStatement();
        
        ResultSet result = db.statement.executeQuery("SELECT * FROM `movie`");
            int i = 0;
            while(result.next()){
                movie[i][0] = result.getString("judul");
                movie[i][1] = result.getString("alur");
                movie[i][2] = result.getString("penokohan");
                movie[i][3] = result.getString("akting");
                movie[i][4] = result.getString("nilai");
                i++;
            }
            db.statement.close();
        } catch(Exception err){
            System.out.println(err);
        }
        
        
        DefaultTableModel model = (DefaultTableModel)this.Table.getModel();
        Object[] row = new Object[5];
        model.setRowCount(0);
        for (int i = 0; movie[i][0] != null; i++) {
            row[0] = movie[i][0];
            row[1] = movie[i][1];
            row[2] = movie[i][2];
            row[3] = movie[i][3];
            row[4] = movie[i][4];
            model.addRow(row);
        }
        this.TxtJudul.setText("");
        this.TxtAlur.setText("");
        this.TxtPenokohan.setText("");
        this.TxtAkting.setText("");
    }//GEN-LAST:event_BtnDeleteActionPerformed

    private void BtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClearActionPerformed
        // TODO add your handling code here:
        this.TxtJudul.setText("");
        this.TxtAlur.setText("");
        this.TxtPenokohan.setText("");
        this.TxtAkting.setText("");
    }//GEN-LAST:event_BtnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataMovie(DataMovie.db).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnClear;
    private javax.swing.JButton BtnDelete;
    private javax.swing.JButton BtnTambah;
    private javax.swing.JButton BtnUpdate;
    private javax.swing.JTable Table;
    private javax.swing.JTextField TxtAkting;
    private javax.swing.JTextField TxtAlur;
    private javax.swing.JTextField TxtJudul;
    private javax.swing.JTextField TxtPenokohan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
